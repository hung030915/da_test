// Generated by view binder compiler. Do not edit!
package com.example.s_shop.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.denzcoskun.imageslider.ImageSlider;
import com.example.s_shop.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DetailProductBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView backDetailProduct;

  @NonNull
  public final Button btnCart;

  @NonNull
  public final TextView btnDetailComment;

  @NonNull
  public final TextView btnShowDetailProduct;

  @NonNull
  public final TextView count;

  @NonNull
  public final ImageView imgCart;

  @NonNull
  public final ImageSlider imgProduct;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final RecyclerView recyProductSimilar;

  @NonNull
  public final RecyclerView recyVoucher;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final TextView soldQuantity;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvPrice;

  @NonNull
  public final TextView tvProductDetail;

  @NonNull
  public final TextView tvQuantityCart;

  private DetailProductBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView backDetailProduct, @NonNull Button btnCart,
      @NonNull TextView btnDetailComment, @NonNull TextView btnShowDetailProduct,
      @NonNull TextView count, @NonNull ImageView imgCart, @NonNull ImageSlider imgProduct,
      @NonNull LinearLayout linearLayout, @NonNull RecyclerView recyProductSimilar,
      @NonNull RecyclerView recyVoucher, @NonNull ScrollView scrollView,
      @NonNull TextView soldQuantity, @NonNull TextView tvName, @NonNull TextView tvPrice,
      @NonNull TextView tvProductDetail, @NonNull TextView tvQuantityCart) {
    this.rootView = rootView;
    this.backDetailProduct = backDetailProduct;
    this.btnCart = btnCart;
    this.btnDetailComment = btnDetailComment;
    this.btnShowDetailProduct = btnShowDetailProduct;
    this.count = count;
    this.imgCart = imgCart;
    this.imgProduct = imgProduct;
    this.linearLayout = linearLayout;
    this.recyProductSimilar = recyProductSimilar;
    this.recyVoucher = recyVoucher;
    this.scrollView = scrollView;
    this.soldQuantity = soldQuantity;
    this.tvName = tvName;
    this.tvPrice = tvPrice;
    this.tvProductDetail = tvProductDetail;
    this.tvQuantityCart = tvQuantityCart;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DetailProductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DetailProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.detail_product, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DetailProductBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backDetailProduct;
      ImageView backDetailProduct = ViewBindings.findChildViewById(rootView, id);
      if (backDetailProduct == null) {
        break missingId;
      }

      id = R.id.btnCart;
      Button btnCart = ViewBindings.findChildViewById(rootView, id);
      if (btnCart == null) {
        break missingId;
      }

      id = R.id.btnDetailComment;
      TextView btnDetailComment = ViewBindings.findChildViewById(rootView, id);
      if (btnDetailComment == null) {
        break missingId;
      }

      id = R.id.btnShowDetailProduct;
      TextView btnShowDetailProduct = ViewBindings.findChildViewById(rootView, id);
      if (btnShowDetailProduct == null) {
        break missingId;
      }

      id = R.id.count;
      TextView count = ViewBindings.findChildViewById(rootView, id);
      if (count == null) {
        break missingId;
      }

      id = R.id.imgCart;
      ImageView imgCart = ViewBindings.findChildViewById(rootView, id);
      if (imgCart == null) {
        break missingId;
      }

      id = R.id.imgProduct;
      ImageSlider imgProduct = ViewBindings.findChildViewById(rootView, id);
      if (imgProduct == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.recy_product_similar;
      RecyclerView recyProductSimilar = ViewBindings.findChildViewById(rootView, id);
      if (recyProductSimilar == null) {
        break missingId;
      }

      id = R.id.recy_voucher;
      RecyclerView recyVoucher = ViewBindings.findChildViewById(rootView, id);
      if (recyVoucher == null) {
        break missingId;
      }

      id = R.id.scrollView;
      ScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.soldQuantity;
      TextView soldQuantity = ViewBindings.findChildViewById(rootView, id);
      if (soldQuantity == null) {
        break missingId;
      }

      id = R.id.tvName;
      TextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tvPrice;
      TextView tvPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvPrice == null) {
        break missingId;
      }

      id = R.id.tvProductDetail;
      TextView tvProductDetail = ViewBindings.findChildViewById(rootView, id);
      if (tvProductDetail == null) {
        break missingId;
      }

      id = R.id.tvQuantityCart;
      TextView tvQuantityCart = ViewBindings.findChildViewById(rootView, id);
      if (tvQuantityCart == null) {
        break missingId;
      }

      return new DetailProductBinding((ConstraintLayout) rootView, backDetailProduct, btnCart,
          btnDetailComment, btnShowDetailProduct, count, imgCart, imgProduct, linearLayout,
          recyProductSimilar, recyVoucher, scrollView, soldQuantity, tvName, tvPrice,
          tvProductDetail, tvQuantityCart);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
