// Generated by view binder compiler. Do not edit!
package com.example.s_shop.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.s_shop.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogUpdateOptionProductBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView btnHuy;

  @NonNull
  public final TextView btnLuu;

  @NonNull
  public final CheckBox chkHotOption;

  @NonNull
  public final ConstraintLayout constraint;

  @NonNull
  public final EditText edtDiscountValue;

  @NonNull
  public final EditText edtNameColor;

  @NonNull
  public final EditText edtPrice;

  @NonNull
  public final EditText edtQuantity;

  @NonNull
  public final ImageView imgAvartar;

  @NonNull
  public final RelativeLayout imgCamera;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final TextView title;

  private DialogUpdateOptionProductBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView btnHuy, @NonNull TextView btnLuu, @NonNull CheckBox chkHotOption,
      @NonNull ConstraintLayout constraint, @NonNull EditText edtDiscountValue,
      @NonNull EditText edtNameColor, @NonNull EditText edtPrice, @NonNull EditText edtQuantity,
      @NonNull ImageView imgAvartar, @NonNull RelativeLayout imgCamera,
      @NonNull LinearLayout linearLayout2, @NonNull TextView title) {
    this.rootView = rootView;
    this.btnHuy = btnHuy;
    this.btnLuu = btnLuu;
    this.chkHotOption = chkHotOption;
    this.constraint = constraint;
    this.edtDiscountValue = edtDiscountValue;
    this.edtNameColor = edtNameColor;
    this.edtPrice = edtPrice;
    this.edtQuantity = edtQuantity;
    this.imgAvartar = imgAvartar;
    this.imgCamera = imgCamera;
    this.linearLayout2 = linearLayout2;
    this.title = title;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogUpdateOptionProductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogUpdateOptionProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_update_option_product, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogUpdateOptionProductBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnHuy;
      TextView btnHuy = ViewBindings.findChildViewById(rootView, id);
      if (btnHuy == null) {
        break missingId;
      }

      id = R.id.btnLuu;
      TextView btnLuu = ViewBindings.findChildViewById(rootView, id);
      if (btnLuu == null) {
        break missingId;
      }

      id = R.id.chkHotOption;
      CheckBox chkHotOption = ViewBindings.findChildViewById(rootView, id);
      if (chkHotOption == null) {
        break missingId;
      }

      id = R.id.constraint;
      ConstraintLayout constraint = ViewBindings.findChildViewById(rootView, id);
      if (constraint == null) {
        break missingId;
      }

      id = R.id.edtDiscountValue;
      EditText edtDiscountValue = ViewBindings.findChildViewById(rootView, id);
      if (edtDiscountValue == null) {
        break missingId;
      }

      id = R.id.edtNameColor;
      EditText edtNameColor = ViewBindings.findChildViewById(rootView, id);
      if (edtNameColor == null) {
        break missingId;
      }

      id = R.id.edtPrice;
      EditText edtPrice = ViewBindings.findChildViewById(rootView, id);
      if (edtPrice == null) {
        break missingId;
      }

      id = R.id.edtQuantity;
      EditText edtQuantity = ViewBindings.findChildViewById(rootView, id);
      if (edtQuantity == null) {
        break missingId;
      }

      id = R.id.imgAvartar;
      ImageView imgAvartar = ViewBindings.findChildViewById(rootView, id);
      if (imgAvartar == null) {
        break missingId;
      }

      id = R.id.imgCamera;
      RelativeLayout imgCamera = ViewBindings.findChildViewById(rootView, id);
      if (imgCamera == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new DialogUpdateOptionProductBinding((ConstraintLayout) rootView, btnHuy, btnLuu,
          chkHotOption, constraint, edtDiscountValue, edtNameColor, edtPrice, edtQuantity,
          imgAvartar, imgCamera, linearLayout2, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
