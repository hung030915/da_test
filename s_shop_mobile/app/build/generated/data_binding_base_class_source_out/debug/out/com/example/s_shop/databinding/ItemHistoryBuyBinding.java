// Generated by view binder compiler. Do not edit!
package com.example.s_shop.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.s_shop.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemHistoryBuyBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView img;

  @NonNull
  public final TextView txtMoney;

  @NonNull
  public final TextView txtNamehis;

  @NonNull
  public final TextView txtPriceHis;

  @NonNull
  public final TextView txtnametypeHis;

  private ItemHistoryBuyBinding(@NonNull LinearLayout rootView, @NonNull ImageView img,
      @NonNull TextView txtMoney, @NonNull TextView txtNamehis, @NonNull TextView txtPriceHis,
      @NonNull TextView txtnametypeHis) {
    this.rootView = rootView;
    this.img = img;
    this.txtMoney = txtMoney;
    this.txtNamehis = txtNamehis;
    this.txtPriceHis = txtPriceHis;
    this.txtnametypeHis = txtnametypeHis;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemHistoryBuyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemHistoryBuyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_history_buy, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemHistoryBuyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.img;
      ImageView img = ViewBindings.findChildViewById(rootView, id);
      if (img == null) {
        break missingId;
      }

      id = R.id.txtMoney;
      TextView txtMoney = ViewBindings.findChildViewById(rootView, id);
      if (txtMoney == null) {
        break missingId;
      }

      id = R.id.txtNamehis;
      TextView txtNamehis = ViewBindings.findChildViewById(rootView, id);
      if (txtNamehis == null) {
        break missingId;
      }

      id = R.id.txtPriceHis;
      TextView txtPriceHis = ViewBindings.findChildViewById(rootView, id);
      if (txtPriceHis == null) {
        break missingId;
      }

      id = R.id.txtnametypeHis;
      TextView txtnametypeHis = ViewBindings.findChildViewById(rootView, id);
      if (txtnametypeHis == null) {
        break missingId;
      }

      return new ItemHistoryBuyBinding((LinearLayout) rootView, img, txtMoney, txtNamehis,
          txtPriceHis, txtnametypeHis);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
