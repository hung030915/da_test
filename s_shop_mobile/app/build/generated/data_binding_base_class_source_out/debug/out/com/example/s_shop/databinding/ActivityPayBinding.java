// Generated by view binder compiler. Do not edit!
package com.example.s_shop.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.s_shop.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPayBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView btnOrder;

  @NonNull
  public final ImageView imageArrow;

  @NonNull
  public final ImageView imageArrow1;

  @NonNull
  public final ImageView imageCash;

  @NonNull
  public final ImageView imageVoucher;

  @NonNull
  public final ImageView imgBack;

  @NonNull
  public final LinearLayout layoutInfo;

  @NonNull
  public final RelativeLayout layoutPay;

  @NonNull
  public final RecyclerView rcvProduct;

  @NonNull
  public final LinearLayout toolbar;

  @NonNull
  public final TextView tvInfoUser;

  @NonNull
  public final TextView tvTotalPrice;

  private ActivityPayBinding(@NonNull ConstraintLayout rootView, @NonNull TextView btnOrder,
      @NonNull ImageView imageArrow, @NonNull ImageView imageArrow1, @NonNull ImageView imageCash,
      @NonNull ImageView imageVoucher, @NonNull ImageView imgBack, @NonNull LinearLayout layoutInfo,
      @NonNull RelativeLayout layoutPay, @NonNull RecyclerView rcvProduct,
      @NonNull LinearLayout toolbar, @NonNull TextView tvInfoUser, @NonNull TextView tvTotalPrice) {
    this.rootView = rootView;
    this.btnOrder = btnOrder;
    this.imageArrow = imageArrow;
    this.imageArrow1 = imageArrow1;
    this.imageCash = imageCash;
    this.imageVoucher = imageVoucher;
    this.imgBack = imgBack;
    this.layoutInfo = layoutInfo;
    this.layoutPay = layoutPay;
    this.rcvProduct = rcvProduct;
    this.toolbar = toolbar;
    this.tvInfoUser = tvInfoUser;
    this.tvTotalPrice = tvTotalPrice;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPayBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPayBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_pay, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPayBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnOrder;
      TextView btnOrder = ViewBindings.findChildViewById(rootView, id);
      if (btnOrder == null) {
        break missingId;
      }

      id = R.id.image_arrow;
      ImageView imageArrow = ViewBindings.findChildViewById(rootView, id);
      if (imageArrow == null) {
        break missingId;
      }

      id = R.id.image_arrow_1;
      ImageView imageArrow1 = ViewBindings.findChildViewById(rootView, id);
      if (imageArrow1 == null) {
        break missingId;
      }

      id = R.id.image_cash;
      ImageView imageCash = ViewBindings.findChildViewById(rootView, id);
      if (imageCash == null) {
        break missingId;
      }

      id = R.id.imageVoucher;
      ImageView imageVoucher = ViewBindings.findChildViewById(rootView, id);
      if (imageVoucher == null) {
        break missingId;
      }

      id = R.id.imgBack;
      ImageView imgBack = ViewBindings.findChildViewById(rootView, id);
      if (imgBack == null) {
        break missingId;
      }

      id = R.id.layoutInfo;
      LinearLayout layoutInfo = ViewBindings.findChildViewById(rootView, id);
      if (layoutInfo == null) {
        break missingId;
      }

      id = R.id.layoutPay;
      RelativeLayout layoutPay = ViewBindings.findChildViewById(rootView, id);
      if (layoutPay == null) {
        break missingId;
      }

      id = R.id.rcvProduct;
      RecyclerView rcvProduct = ViewBindings.findChildViewById(rootView, id);
      if (rcvProduct == null) {
        break missingId;
      }

      id = R.id.toolbar;
      LinearLayout toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvInfoUser;
      TextView tvInfoUser = ViewBindings.findChildViewById(rootView, id);
      if (tvInfoUser == null) {
        break missingId;
      }

      id = R.id.tvTotalPrice;
      TextView tvTotalPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalPrice == null) {
        break missingId;
      }

      return new ActivityPayBinding((ConstraintLayout) rootView, btnOrder, imageArrow, imageArrow1,
          imageCash, imageVoucher, imgBack, layoutInfo, layoutPay, rcvProduct, toolbar, tvInfoUser,
          tvTotalPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
