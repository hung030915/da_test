// Generated by view binder compiler. Do not edit!
package com.example.s_shop.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.s_shop.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutProfileUserBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final EditText edtBirthday;

  @NonNull
  public final EditText edtUserName;

  @NonNull
  public final EditText email;

  @NonNull
  public final CircleImageView imgAvartar;

  @NonNull
  public final ImageView imgBack;

  @NonNull
  public final ImageView imgMayAnh;

  @NonNull
  public final LinearLayout linearCalander;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final ImageView updatePro;

  private LayoutProfileUserBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnSave,
      @NonNull EditText edtBirthday, @NonNull EditText edtUserName, @NonNull EditText email,
      @NonNull CircleImageView imgAvartar, @NonNull ImageView imgBack, @NonNull ImageView imgMayAnh,
      @NonNull LinearLayout linearCalander, @NonNull LinearLayout linearLayout,
      @NonNull ImageView updatePro) {
    this.rootView = rootView;
    this.btnSave = btnSave;
    this.edtBirthday = edtBirthday;
    this.edtUserName = edtUserName;
    this.email = email;
    this.imgAvartar = imgAvartar;
    this.imgBack = imgBack;
    this.imgMayAnh = imgMayAnh;
    this.linearCalander = linearCalander;
    this.linearLayout = linearLayout;
    this.updatePro = updatePro;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutProfileUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutProfileUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_profile_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutProfileUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSave;
      Button btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.edtBirthday;
      EditText edtBirthday = ViewBindings.findChildViewById(rootView, id);
      if (edtBirthday == null) {
        break missingId;
      }

      id = R.id.edtUserName;
      EditText edtUserName = ViewBindings.findChildViewById(rootView, id);
      if (edtUserName == null) {
        break missingId;
      }

      id = R.id.email;
      EditText email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.imgAvartar;
      CircleImageView imgAvartar = ViewBindings.findChildViewById(rootView, id);
      if (imgAvartar == null) {
        break missingId;
      }

      id = R.id.imgBack;
      ImageView imgBack = ViewBindings.findChildViewById(rootView, id);
      if (imgBack == null) {
        break missingId;
      }

      id = R.id.imgMayAnh;
      ImageView imgMayAnh = ViewBindings.findChildViewById(rootView, id);
      if (imgMayAnh == null) {
        break missingId;
      }

      id = R.id.linearCalander;
      LinearLayout linearCalander = ViewBindings.findChildViewById(rootView, id);
      if (linearCalander == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.updatePro;
      ImageView updatePro = ViewBindings.findChildViewById(rootView, id);
      if (updatePro == null) {
        break missingId;
      }

      return new LayoutProfileUserBinding((ConstraintLayout) rootView, btnSave, edtBirthday,
          edtUserName, email, imgAvartar, imgBack, imgMayAnh, linearCalander, linearLayout,
          updatePro);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
