// Generated by view binder compiler. Do not edit!
package com.example.s_shop.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.s_shop.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomSheetCommentBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final ImageView btnSend;

  @NonNull
  public final EditText edComment;

  @NonNull
  public final CircleImageView imgAvartar;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final RecyclerView rcvComment;

  private BottomSheetCommentBinding(@NonNull NestedScrollView rootView, @NonNull ImageView btnSend,
      @NonNull EditText edComment, @NonNull CircleImageView imgAvartar,
      @NonNull LinearLayout linearLayout, @NonNull NestedScrollView nestedScrollView,
      @NonNull RecyclerView rcvComment) {
    this.rootView = rootView;
    this.btnSend = btnSend;
    this.edComment = edComment;
    this.imgAvartar = imgAvartar;
    this.linearLayout = linearLayout;
    this.nestedScrollView = nestedScrollView;
    this.rcvComment = rcvComment;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomSheetCommentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomSheetCommentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_sheet_comment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomSheetCommentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSend;
      ImageView btnSend = ViewBindings.findChildViewById(rootView, id);
      if (btnSend == null) {
        break missingId;
      }

      id = R.id.edComment;
      EditText edComment = ViewBindings.findChildViewById(rootView, id);
      if (edComment == null) {
        break missingId;
      }

      id = R.id.imgAvartar;
      CircleImageView imgAvartar = ViewBindings.findChildViewById(rootView, id);
      if (imgAvartar == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.rcvComment;
      RecyclerView rcvComment = ViewBindings.findChildViewById(rootView, id);
      if (rcvComment == null) {
        break missingId;
      }

      return new BottomSheetCommentBinding((NestedScrollView) rootView, btnSend, edComment,
          imgAvartar, linearLayout, nestedScrollView, rcvComment);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
